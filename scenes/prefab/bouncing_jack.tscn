[gd_scene load_steps=19 format=3]

[ext_resource type="Script" path="res://scripts/entity.gd" id="1"]
[ext_resource type="Script" path="res://scripts/state_machine.gd" id="2"]
[ext_resource type="AudioStream" uid="uid://dggf6qg38wnyp" path="res://audio/sfx/clink1.wav" id="3"]
[ext_resource type="AudioStream" uid="uid://cjmscx1qlp2on" path="res://audio/sfx/clink2.wav" id="4"]
[ext_resource type="PackedScene" uid="uid://c31y51bdp7t8a" path="res://scenes/prefab/jack.tscn" id="5"]

[sub_resource type="GDScript" id="1"]
resource_name = "bj_bouncing"
script/source = "# bj_bouncing.gd
extends State

'''
Bouncing Jack => Bouncing state
'''

@onready var bj := owner as Entity

# Last known y velocity
var last_yvel : float = 0

func _enter(_msg := {}) -> void:
	pass

func _state_physics_process(delta : float) -> void:
	# Update physics
	bj.update_movement(delta)
	
	# Check if on wall
	if bj.is_on_wall_only():
		# Bounce from wall
		var normal = bj.get_wall_normal().normalized()
		var new_vel = bj.velocity.reflect(normal).normalized()
		print(Vector2(new_vel.x, new_vel.z).angle())
		bj.vis_rotation.y = Vector2(new_vel.x, new_vel.z).angle()
		
		# Play sound
		play_sfx()
		
	# Check if on floor
	if bj.is_on_floor():
		# Stick to floor if vel is low enough
		if last_yvel > -10.0:
			state_machine.transition_state(\"idle\")
			return
		bj.forward_speed *= 0.7
		bj.velocity.y = -last_yvel * 0.6
		
		# Play sound
		play_sfx()
		
	# Set last yvel
	last_yvel = bj.velocity.y
	
# FUNCTION
#-------------------------------------------------------------------------------

func play_sfx() -> void:
	bj.get_node(\"sfx/clink\").play()
"

[sub_resource type="GDScript" id="2"]
resource_name = "bj_idle"
script/source = "# bj_idle.gd
extends State

'''
Bouncing Jack => Idle state
'''

@onready var bj := owner as Entity
@onready var timer := $despawn_timer as Timer

func _enter(_msg := {}) -> void:
	# Fire timer
	timer.start()

func _state_physics_process(delta : float) -> void:
	# Update physics
	if !is_zero_approx(bj.forward_speed):
		bj.update_movement(delta)
		bj.forward_speed = bj.ease_value(bj.forward_speed, 0, bj.deacceleration, delta)
	
func _jack_collected() -> void:
	timer.stop()
	bj.queue_free()

func _timer_timeout() -> void:
	bj.set_anim(\"despawn\")
"

[sub_resource type="AudioStreamRandomizer" id="3"]
playback_mode = 1
random_pitch = 1.1
streams_count = 2
stream_0/stream = ExtResource( "3" )
stream_0/weight = 1.0
stream_1/stream = ExtResource( "4" )
stream_1/weight = 1.0
script = null

[sub_resource type="Animation" id="4"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("jack:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
script = null

[sub_resource type="Animation" id="5"]
resource_name = "despawn"
length = 3.0
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("jack:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.2, 0.4, 0.6, 0.8, 1, 1.2, 1.4, 1.6, 1.8, 2, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false]
}
tracks/1/type = "method"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(3),
"transitions": PackedFloat32Array(1),
"values": [{
"args": [],
"method": &"queue_free"
}]
}
script = null

[sub_resource type="AnimationLibrary" id="6"]
_data = {
"RESET": SubResource( "4" ),
"despawn": SubResource( "5" )
}
script = null

[sub_resource type="AnimationNodeAnimation" id="7"]
animation = &"RESET"
script = null

[sub_resource type="AnimationNodeAnimation" id="8"]
animation = &"despawn"
script = null

[sub_resource type="AnimationNodeStateMachineTransition" id="9"]
advance_mode = 2
script = null

[sub_resource type="AnimationNodeStateMachineTransition" id="10"]
script = null

[sub_resource type="AnimationNodeStateMachineTransition" id="11"]
switch_mode = 2
advance_mode = 2
script = null

[sub_resource type="AnimationNodeStateMachine" id="12"]
states/End/node = null
states/RESET/node = SubResource( "7" )
states/RESET/position = Vector2(406, 100)
states/Start/node = null
states/despawn/node = SubResource( "8" )
states/despawn/position = Vector2(621, 100)
transitions = ["Start", "RESET", SubResource( "9" ), "RESET", "despawn", SubResource( "10" ), "despawn", "End", SubResource( "11" )]
graph_offset = Vector2(43, -35)
script = null

[sub_resource type="CylinderShape3D" id="13"]
height = 3.0
radius = 2.2775
script = null

[node name="bouncing_jack" type="CharacterBody3D"]
collision_layer = 0
script = ExtResource( "1" )
visual_node = NodePath("jack")
floor_raycast = NodePath("floor")
anim_tree = NodePath("tree")
deacceleration = 60.0
jtt_peak = 0.45

[node name="fsm" type="Node" parent="."]
script = ExtResource( "2" )
initial_state = NodePath("bouncing")

[node name="bouncing" type="Node" parent="fsm"]
script = SubResource( "1" )

[node name="idle" type="Node" parent="fsm"]
script = SubResource( "2" )

[node name="despawn_timer" type="Timer" parent="fsm/idle"]
wait_time = 10.0

[node name="sfx" type="Node3D" parent="."]

[node name="clink" type="AudioStreamPlayer3D" parent="sfx"]
stream = SubResource( "3" )
attenuation_model = 3
volume_db = 1.592
max_distance = 150.0
bus = &"Sound"

[node name="jack" parent="." instance=ExtResource( "5" )]

[node name="anim" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource( "6" )
}

[node name="tree" type="AnimationTree" parent="."]
libraries = {
"": SubResource( "6" )
}
tree_root = SubResource( "12" )
anim_player = NodePath("../anim")

[node name="floor" type="RayCast3D" parent="."]
target_position = Vector3(0, -20, 0)
debug_shape_thickness = 5

[node name="col" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.35, 0)
shape = SubResource( "13" )

[connection signal="timeout" from="fsm/idle/despawn_timer" to="fsm/idle" method="_timer_timeout"]
[connection signal="tree_exited" from="jack" to="fsm/idle" method="_jack_collected"]

[editable path="jack"]
